#!/bin/bash

set -eo pipefail

SERVICE=metis
DOCKER_REPO=quay.io/votinginfoproject/metis

if [ -n "$BUILDKITE" ]; then
    IMAGE_TAG=${BUILDKITE_TAG:-"$BUILDKITE_BRANCH-$(git rev-parse --short $BUILDKITE_COMMIT)"};
else
    IMAGE_TAG="$(git symbolic-ref --short HEAD)-$(git rev-parse --short HEAD)";
fi

DOCKER_IMAGE=$DOCKER_REPO:$IMAGE_TAG

echo '--- building docker image'
docker build -t $DOCKER_IMAGE .

if [[ $CI = "true" && $BUILDKITE_BRANCH = "master" ]]; then
    echo '--- pushing docker image to registry'
    docker login -e="." -u="${QUAY_USERNAME}" -p="${QUAY_PASSWORD}" quay.io
    docker push $DOCKER_IMAGE
else
    echo "If you'd like to push this to the Docker repo, run: docker push ${DOCKER_IMAGE}"
fi

echo '--- updating fleet service template'
cp ${SERVICE}@.service.template ${SERVICE}@.service

perl -p -i -e "s|^Environment=DOCKER_IMAGE=.*$|Environment=DOCKER_IMAGE=${DOCKER_IMAGE}|" ${SERVICE}@.service

echo '--- creating new relic config file'
if [ -n "$NEWRELIC_KEY_FRONT_END" ]; then
  cp newrelic.js.sample newrelic.js
  perl -p -i -e "s/license_key : 'license key goes here',/license_key : '${NEWRELIC_KEY_FRONT_END}',/" newrelic.js
else
  echo '--- error: env variable NEWRELIC_KEY_FRONT_END is not set'
fi

if [[ $CI = "true" && $BUILDKITE_BRANCH = "master" ]]; then
  echo '--- saving service file'
  buildkite-agent artifact upload ${SERVICE}@.service
fi
