[Unit]
Description=metis
After=docker.service
Requires=docker.service
After=consul@%i.service
Wants=consul@%i.service
After=rabbitmq@%i.service
Requires=rabbitmq@%i.service

[Service]
EnvironmentFile=/etc/environment
TimeoutStartSec=10m
TimeoutStopSec=10m

Restart=on-failure

Environment=DOCKER_IMAGE=
Environment=CONTAINER=metis
Environment=HOME=/root

ExecStartPre=-/usr/bin/docker kill ${CONTAINER}
ExecStartPre=-/usr/bin/docker rm ${CONTAINER}
ExecStartPre=/usr/bin/docker pull ${DOCKER_IMAGE}

ExecStartPre=/bin/bash -c 'echo NODE_ENV="production" > /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo BASE_URI="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/base-uri?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo DB_PORT_5432_TCP_ADDR="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/postgres/hostname?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo DB_PORT_5432_TCP_PORT="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/postgres/port?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo DB_ENV_POSTGRES_USER="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/postgres/username?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo DB_ENV_POSTGRES_PASSWORD="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/postgres/password?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo DB_ENV_POSTGRES_DATABASE="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/postgres/database?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIP_DP_RABBITMQ_EXCHANGE="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/rabbitmq/exchange?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIP_DP_SES_FROM="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/ses/from-address?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIP_DP_SES_REGION="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/ses/region?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo STORMPATH_ADMIN_GROUP="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/stormpath/admin-group?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo STORMPATH_API_KEY_ID="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/stormpath/api-key-id?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo STORMPATH_API_KEY_SECRET="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/stormpath/api-key-secret?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo STORMPATH_APP_HREF="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/stormpath/app-href?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo STORMPATH_ACCOUNT_STORE="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/stormpath/account-store?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo NEW_RELIC_LICENSE_KEY="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/newrelic/license-key?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo NEW_RELIC_ENVIRONMENT="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/newrelic/environment?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIT_API_KEY="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/google-civic/api-key?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIP_DP_AWS_ACCESS_KEY="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/aws/access-key?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIP_DP_AWS_SECRET_KEY="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/aws/secret-key?raw)" >> /tmp/${CONTAINER}--env'
ExecStartPre=/bin/bash -c 'echo VIP_BATT_BUCKET_NAME="$(curl -s http://${COREOS_PRIVATE_IPV4}:8500/v1/kv/data-suite/batch-addres-test-tool/address-testing-bucket?raw)" >> /tmp/${CONTAINER}--env'

ExecStart=/bin/bash -c 'docker run --name ${CONTAINER} \
  --link rabbitmq:rabbitmq \
  --env-file /tmp/${CONTAINER}--env \
  -p "4000:4000" \
  ${DOCKER_IMAGE}'

ExecStop=/usr/bin/docker stop ${CONTAINER}
ExecStop=/bin/bash -c 'rm /tmp/${CONTAINER}--env'

[X-Fleet]
MachineOf=consul@%i.service
